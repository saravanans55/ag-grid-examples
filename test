import { Component } from '@angular/core';
import { ColDef, GridOptions, GridApi, ColumnApi } from 'ag-grid-community';

@Component({
  selector: 'app-my-grid',
  template: `
    <button (click)="resetGrouping()">Reset Grouping</button>
    <ag-grid-angular
      style="width: 100%; height: 100%;"
      class="ag-theme-alpine"
      [gridOptions]="gridOptions"
      [rowData]="rowData"
      [columnDefs]="columnDefs"
      (gridReady)="onGridReady($event)">
    </ag-grid-angular>
  `
})
export class MyGridComponent {
  public gridOptions: GridOptions = {};
  public rowData: any[] = [
    { make: 'Toyota', model: 'Celica', price: 35000 },
    { make: 'Ford', model: 'Mondeo', price: 32000 },
    { make: 'Porsche', model: 'Boxster', price: 72000 }
  ];
  public columnDefs: ColDef[] = [
    { field: 'make', rowGroup: true },
    { field: 'model' },
    { field: 'price' }
  ];

  private gridApi!: GridApi;
  private columnApi!: ColumnApi;

  onGridReady(params: any) {
    this.gridApi = params.api;
    this.columnApi = params.columnApi;
  }

  resetGrouping() {
    // Get all current columns
    const allColumns = this.columnApi.getAllColumns();
    if (allColumns) {
      // Create new column definitions with rowGroup set to false for all columns
      const newColDefs = allColumns.map(col => {
        const colDef = col.getColDef();
        return { ...colDef, rowGroup: false };
      });
      // Update the grid with the new column definitions
      this.gridApi.setColumnDefs(newColDefs);
    }
  }
}
