import { Component, OnInit } from '@angular/core';
import * as xlsx from 'xlsx';

@Component({
  selector: 'app-excel-export',
  templateUrl: './excel-export.component.html',
  styleUrls: ['./excel-export.component.css']
})
export class ExcelExportComponent implements OnInit {

  constructor() { }

  ngOnInit() { }

  exportExcel() {
    // Create a new workbook.
    const wb = xlsx.Workbook();

    // Create a new worksheet.
    const ws = wb.create_sheet();

    // Add the column titles to the first row.
    const columnTitles = ['Tamil', 'English', 'Maths'];
    for (let i = 0; i < columnTitles.length; i++) {
      ws.cell(row=1, column=i).value = columnTitles[i];
    }

    // Set the bold font style for the column titles.
    for (let i = 0; i < columnTitles.length; i++) {
      ws.cell(row=1, column=i).font.bold = true;
    }

    // Set the minimum width for each field.
    for (let i = 0; i < columnTitles.length; i++) {
      ws.column(i).min_width = 10;
    }

    // Iterate over the row data and add each row to the worksheet.
    const rowData = [
      {
        mark1: 90,
        mark2: 100,
        mark3: 70
      },
      {
        mark1: 90,
        mark2: 100,
        mark3: 70
      },
      {
        mark1: 90,
        mark2: 100,
        mark3: 70
      }
    ];

    for (let i = 0; i < rowData.length; i++) {
      const row = ws.row(ws.max_row + 1);
      for (let j = 0; j < columnTitles.length; j++) {
        row.cell(column=j).value = rowData[i][columnTitles[j]];
      }
    }

    // Save the workbook.
    xlsx.writeFile(wb, 'result.xlsx');
  }
}
