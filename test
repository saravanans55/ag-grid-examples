interface Filter {
  filterType: string;
  values: string[];
}

interface MyObject {
  [key: string]: Filter;
}

let obj1: MyObject = {
  pipeline_type: {
    filterType: "set",
    values: ['IRS']
  }
};

let obj2: MyObject = {
  new_renewed: {
    filterType: "set",
    values: ['New']
  },
  pipeline_type: {
    filterType: "set",
    values: ['IRS']
  }
};

function mergeObjects(obj1: MyObject, obj2: MyObject): MyObject {
  // Start with a copy of obj2
  const result: MyObject = { ...obj2 };

  // Overwrite the keys in result with the values from obj1 if they exist in both
  Object.keys(obj1).forEach(key => {
    result[key] = obj1[key];
  });

  return result;
}

const mergedObj = mergeObjects(obj1, obj2);

console.log(mergedObj);
