import { Component } from '@angular/core';
import { GridApi, Column } from 'ag-grid-community';

@Component({
  selector: 'app-grid-component',
  templateUrl: './grid.component.html',
  styleUrls: ['./grid.component.css']
})
export class GridComponent {
  private gridApi: GridApi;
  private prevRowGroupColumns: string[] = []; // Track the previous row grouping column fields

  public columnDefs: any[];
  public rowData: any[];

  constructor() {
    this.columnDefs = [
      { headerName: 'Column 1', field: 'field1', rowGroup: true },
      { headerName: 'Column 2', field: 'field2', rowGroup: true },
      // Add more columns with rowGroup: true
    ];

    this.rowData = [
      // Populate with your data...
    ];
  }

  onGridReady(params: any) {
    this.gridApi = params.api;
  }

  onAfterColumnsChanged() {
    const currentRowGroupColumns = this.gridApi.getRowGroupColumns();
    const removedColumns = this.prevRowGroupColumns.filter(
      (field) => !currentRowGroupColumns.some((col) => col.getColDef().field === field)
    );

    if (removedColumns.length > 0) {
      // Perform actions for the removed columns
      console.log('Removed Columns:', removedColumns);
    }

    // Update the previous row grouping column fields
    this.prevRowGroupColumns = currentRowGroupColumns.map((col) => col.getColDef().field);
  }
}
