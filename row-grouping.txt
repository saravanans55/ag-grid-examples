import { Component } from '@angular/core';
import { GridApi } from 'ag-grid-community';

@Component({
  selector: 'app-grid-component',
  templateUrl: './grid.component.html',
  styleUrls: ['./grid.component.css']
})
export class GridComponent {
  private gridApi: GridApi;
  public columnDefs: any[];
  public rowData: any[];
  private prevRowGroupColumns: any[] = []; // Track the previous row grouping columns

  constructor() {
    this.columnDefs = [
      { headerName: 'Column 1', field: 'field1', rowGroup: true },
      { headerName: 'Column 2', field: 'field2', rowGroup: true },
      // Add more columns with rowGroup: true
    ];

    this.rowData = [
      // Populate with your data...
    ];
  }

  onGridReady(params: any) {
    this.gridApi = params.api;
  }

  onColumnRowGroupChanged() {
    const rowGroupColumns = this.gridApi.getRowGroupColumns();
    const removedColumns = this.prevRowGroupColumns.filter((col) => !rowGroupColumns.includes(col));

    if (removedColumns.length > 0) {
      // Check if the particular column is removed
      const targetColumn = removedColumns.find((col) => col.field === 'field1');
      if (targetColumn) {
        // Perform actions for the removed column
        console.log("Column 'field1' is removed from the row grouping.");
      }
    }

    // Update the previous row grouping columns
    this.prevRowGroupColumns = [...rowGroupColumns];
  }
}
