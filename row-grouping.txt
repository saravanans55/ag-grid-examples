import { Component } from '@angular/core';
import { GridApi, Column } from 'ag-grid-community';

@Component({
  selector: 'app-grid-component',
  templateUrl: './grid.component.html',
  styleUrls: ['./grid.component.css']
})
export class GridComponent {
  private gridApi: GridApi;
  private prevColumns: Column[] = []; // Track the previous columns

  public columnDefs: any[];
  public rowData: any[];

  constructor() {
    this.columnDefs = [
      { headerName: 'Column 1', field: 'field1', rowGroup: true },
      { headerName: 'Column 2', field: 'field2', rowGroup: true },
      // Add more columns with rowGroup: true
    ];

    this.rowData = [
      // Populate with your data...
    ];
  }

  onGridReady(params: any) {
    this.gridApi = params.api;
  }

  onAfterColumnsChanged() {
    const currentColumns = this.gridApi.getAllColumns();

    const removedColumns = this.prevColumns.filter((prevCol) => {
      return !currentColumns.some((currentCol) => currentCol.colId === prevCol.colId);
    });

    if (removedColumns.length > 0) {
      // Perform actions for the removed columns
      console.log('Removed Columns:', removedColumns.map((col) => col.colDef.headerName));
    }

    // Update the previous columns
    this.prevColumns = currentColumns;
  }
}
